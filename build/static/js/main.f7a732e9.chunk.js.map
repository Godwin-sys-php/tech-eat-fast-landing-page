{"version":3,"sources":["images/logo.jpg","Components/NavBar.jsx","Services/url.js","Screens/ForgotPassword.jsx","Services/users.js","Components/PasswordInput.jsx","Screens/ResetPassword.jsx","Screens/NotFound.jsx","App.js","index.js"],"names":["NavBar","Navbar","expand","style","backgroundColor","color","Brand","href","alt","src","image","width","height","className","fontSize","fontWeight","url","ForgotPassword","useState","email","setEmail","isLoading","setIsLoading","success","setSuccess","invalidEmail","setInvalidEmail","error","setError","document","title","onClick","event","preventDefault","init","method","body","JSON","stringify","headers","fetch","then","res","json","forgotPassword","data","emailSend","catch","display","justifyContent","alignItems","flexDirection","Card","Body","Title","textAlign","Text","Alert","variant","show","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","target","validator","isEmail","Button","size","disabled","block","Spinner","animation","PasswordInput","props","_displayEye","state","isVisible","class","_displayType","_handleEye","setState","_displayContraint","contraint","forUpdate","InputGroup","this","btnId","Append","React","Component","defautProps","ResetPassword","password","setPassword","idUser","match","params","token","Headers","resettPassword","console","log","schema","passwordValidator","is","min","has","uppercase","lowercase","digits","validate","displayButton","NotFound","Container","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f7a732e9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.968dbf25.jpg\";","import { Navbar } from 'react-bootstrap';\nimport image from '../images/logo.jpg';\n\n\nconst NavBar = () => (\n  <Navbar expand=\"lg\" style={{ backgroundColor: \"tomato\", color: \"white\" }}>\n    <Navbar.Brand href=\"/\">\n      <img\n        alt=\"\"\n        src={image}\n        width=\"50\"\n        height=\"50\"\n        className=\"d-inline-block align-top\"\n      />{' '}\n      <span style={{ fontSize: 30, fontWeight: \"bold\", color: \"white\" }}>Tech'Eat Fast</span>\n    </Navbar.Brand>\n  </Navbar>\n)\n\nexport default NavBar;","const url = \"http://localhost:4200\";\n\nexport default url;","import { useState } from 'react';\n\nimport { Card, Form, Button, Spinner, Alert } from 'react-bootstrap';\nimport NavBar from '../Components/NavBar';\nimport validator from 'validator';\nimport { forgotPassword } from '../Services/users';\n\nconst ForgotPassword = () => {\n  const [email, setEmail] = useState(\"\");\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [invalidEmail, setInvalidEmail] = useState(false);\n  const [error, setError] = useState(false);\n\n  document.title = \"Tech'Eat Fast - Mot de passe oublié\";\n\n  const onEmailChange = (event) => {\n    setEmail(event.target.value);\n  }\n\n  const onClick = (event) => {\n    event.preventDefault();\n    setIsLoading(true);\n    forgotPassword(email)\n      .then(data => {\n        if (data.emailSend) {\n          setError(false);\n          setInvalidEmail(false);\n          setSuccess(true);\n\n          setIsLoading(false);\n        } else if (data.invalidEmail) {\n          setError(false);\n          setInvalidEmail(true);\n          setSuccess(false);\n\n          setIsLoading(false);\n        } else {\n          setError(true);\n          setInvalidEmail(false);\n          setSuccess(false);\n\n          setIsLoading(false);\n        }\n      })\n      .catch(() => {\n        setError(true);\n        setInvalidEmail(false);\n        setSuccess(false);\n\n        setIsLoading(false);\n      });\n  }\n\n  const displayButton = () => {\n    if (validator.isEmail(email)) {\n      return (\n        <Button variant=\"success\" type=\"submit\" size=\"lg\" disabled={isLoading} block onClick={onClick}>\n          {isLoading ? <Spinner animation=\"border\" variant=\"light\" style={{ width: 25, height: 25, fontSize: '75%' }} /> : \"Confirmer\"}\n        </Button>\n      );\n    } else {\n      return (\n        <Button variant=\"success\" size=\"lg\" disabled={true} block>\n          Confirmer\n        </Button>\n      );\n    }\n  }\n\n  if (success) {\n    return (\n      <>\n        <NavBar />\n        <div className='container' style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\n          <br />\n          <h1>Mot de passe oublié</h1>\n          <br />\n          <Card style={{ width: '20rem' }}>\n            <Card.Body>\n              <Card.Title style={{ textAlign: 'center', }}>Récupérer votre compte</Card.Title>\n              <Card.Text style={{ fontSize: \"90%\" }}>\n                Un email vient de vous être envoyé avec un lien pour récupérer votre compte. Il expire dans 15 minutes\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </div>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <NavBar />\n        <div className='container' style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\n          <br />\n          <h1>Mot de passe oublié</h1>\n          <br />\n          <Card style={{ width: '20rem' }}>\n            <Card.Body>\n              <Card.Title style={{ textAlign: 'center', }}>Récupérer votre compte</Card.Title>\n              <Card.Text style={{ fontSize: \"80%\" }}>\n                Entrez votre adresse e-mail et nous vous enverrons un lien pour récupérer votre compte.\n              </Card.Text>\n              <Alert variant=\"danger\" style={{ fontSize: \"80%\" }} show={error}>\n                Une erreur a eu lieu lors de la communication avec le serveur, veuillez réessayer plus tard ou contactez-nous.\n              </Alert>\n              <Alert variant=\"warning\" style={{ fontSize: \"80%\" }} show={invalidEmail}>\n                Votre adresse email est introuvable, êtes vous sûre que c'est la bonne?\n              </Alert>\n              <Form>\n                <Form.Group controlId=\"email\">\n                  <Form.Label>Adresse email: </Form.Label>\n                  <Form.Control type=\"email\" placeholder=\"Votre adresse email (ex: john@example.com)...\" value={email} onChange={onEmailChange} />\n                </Form.Group>\n                {displayButton()}\n              </Form>\n            </Card.Body>\n          </Card>\n        </div>\n      </>\n    );\n  }\n};\n\nexport default ForgotPassword;","import url from './url';\n\nexport function forgotPassword(email) {\n  const init = {\n    method: 'POST',\n    body: JSON.stringify({email: email}),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    },\n  };\n  return fetch(`${url}/users/forgot-password`, init)\n    .then(res => res.json());\n}\n\nexport function resettPassword(idUser, token, password) {\n  const init = {\n    method: 'POST',\n    body: JSON.stringify({password: password}),\n    headers: new Headers({\n      'Authorization': 'Bearer '+token, \n      \"Content-type\": \"application/json; charset=UTF-8\"\n    })\n  };\n  return fetch(`${url}/users/reset-password/${idUser}`, init)\n    .then(res => res.json());\n}","import React from 'react';\n\nimport { Form, Button, InputGroup } from 'react-bootstrap';\n\nexport default class PasswordInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isVisible: false\n    };\n  };\n\n  _displayEye = () => {\n    return this.state.isVisible ? <i class=\"fas fa-eye-slash\"></i> : <i class=\"fas fa-eye\"></i>;\n  };\n\n  _displayType = () => {\n    return this.state.isVisible ? 'text' : 'password';\n  };\n\n  _handleEye = () => {\n    this.setState({ isVisible: !this.state.isVisible });\n  };\n\n  _displayContraint = () => {\n    return this.props.contraint ?\n      'Doit contenir des majuscules, contentir des minuscules, avoir au moins 8 caractères et avoir au moins 2 chiffres'\n      :\n      this.props.forUpdate ? \"Laissez vide si vous ne voulez pas le changer\" : \"Le mot de passe...\"\n  }\n\n  render() {\n    return (\n      <Form.Group controlId=\"formBasicPassword\">\n        <InputGroup className=\"mb-3\">\n          <Form.Control\n            type={this._displayType()}\n            placeholder={this._displayContraint()}\n            aria-label=\"Mot de passe\"\n            aria-describedby={this.props.btnId}\n            onChange={this.props.onChange}\n            value= {this.props.value}\n          />\n          <InputGroup.Append>\n            <Button variant=\"secondary\" aria-hidden=\"true\" onClick={this._handleEye}>{this._displayEye()}</Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </Form.Group>\n    );\n  }\n}\n\nPasswordInput.defautProps = {\n  contraint: false\n};","import { useState } from 'react';\n\nimport { Card, Form, Button, Spinner, Alert } from 'react-bootstrap';\nimport NavBar from '../Components/NavBar';\nimport PasswordInput from '../Components/PasswordInput';\nimport passwordValidator from 'password-validator';\nimport { resettPassword } from '../Services/users';\n\nconst ResetPassword = (props) => {\n  const [password, setPassword] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const idUser = props.match.params.idUser;\n  const token = props.match.params.token;\n\n  document.title = \"Tech'Eat Fast - Mot de passe oublié\";\n\n  const onPasswordChange = (event) => {\n    setPassword(event.target.value);\n  }\n\n  const onClick = (event) => {\n    event.preventDefault();\n    resettPassword(idUser, token, password)\n      .then(data => {\n        console.log(data);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  const displayButton = () => {\n    const schema = new passwordValidator();// On crée une nouvelle instance de l'objet\n    schema// On crée un nouveau schéma\n      .is().min(8)                                    // Minimum length 8\n      .has().uppercase()                              // Must have uppercase letters\n      .has().lowercase()                              // Must have lowercase letters\n      .has().digits(2)                                // Must have at least 2 digits\n    if (schema.validate(password)) {\n      return (\n        <Button variant=\"success\" type=\"submit\" size=\"lg\" disabled={isLoading} block onClick={onClick}>\n          {isLoading ? <Spinner animation=\"border\" variant=\"light\" style={{ width: 25, height: 25, fontSize: '75%' }} /> : \"Confirmer\"}\n        </Button>\n      );\n    } else {\n      return (\n        <Button variant=\"success\" size=\"lg\" disabled={true} block>\n          Confirmer\n        </Button>\n      );\n    }\n  }\n\n  return (\n    <>\n      <NavBar />\n      <div className='container' style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\n        <br />\n        <h1>Mot de passe oublié</h1>\n        <br />\n        <Card style={{ width: '20rem' }}>\n          <Card.Body>\n            <Card.Title style={{ textAlign: 'center', }}>Changer votre mot de passe</Card.Title>\n            <Card.Text style={{ fontSize: \"80%\" }}>Doit contenir des majuscules, contentir des minuscules, avoir au moins 8 caractères et avoir au moins 2 chiffres</Card.Text>\n            <Form>\n              <Form.Group controlId=\"password\">\n                <Form.Label>Nouveau mot de passe: </Form.Label>\n                <PasswordInput value={password} onChange={onPasswordChange} />\n              </Form.Group>\n              {displayButton()}\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    </>\n  );\n}\n\nexport default ResetPassword;","import { Container } from 'react-bootstrap';\nimport NavBar from '../Components/NavBar';\n\nconst NotFound = () => {\n  document.title = \"Tech'Eat Fast - Page Introuvable\";\n  return (\n    <>\n      <NavBar />\n      <Container>\n        <h1>Page introuvable</h1>\n      </Container>\n    </>\n  );\n};\n\nexport default NotFound;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nimport ForgotPassword from './Screens/ForgotPassword';\nimport ResetPassword from './Screens/ResetPassword';\nimport NotFound from './Screens/NotFound';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/application/forgot-password' component={ForgotPassword} />\n        <Route path='/application/reset-password/:idUser/:token' component={ResetPassword} />\n\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}