[{"/var/www/client/src/index.js":"1","/var/www/client/src/App.js":"2","/var/www/client/src/reportWebVitals.js":"3","/var/www/client/src/Stores/storeConfig.js":"4","/var/www/client/src/Screens/Index.jsx":"5","/var/www/client/src/Screens/Home.jsx":"6","/var/www/client/src/Stores/Reducers/CartInRestaurant.js":"7","/var/www/client/src/Stores/Reducers/Data.js":"8","/var/www/client/src/Stores/Reducers/Actions.js":"9","/var/www/client/src/Services/Restaurant.js":"10","/var/www/client/src/Components/Navbar.jsx":"11","/var/www/client/src/Components/MenuList.jsx":"12","/var/www/client/src/Components/Dish.jsx":"13","/var/www/client/src/Components/DishForCart.jsx":"14","/var/www/client/src/Components/ModalDish.jsx":"15","/var/www/client/src/Components/ModalCommand.jsx":"16","/var/www/client/src/Services/Url.js":"17","/var/www/client/src/Services/Dish.js":"18","/var/www/client/src/Services/Command.js":"19"},{"size":500,"mtime":1629918970223,"results":"20","hashOfConfig":"21"},{"size":590,"mtime":1629919668750,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1629918970223,"results":"23","hashOfConfig":"21"},{"size":330,"mtime":1629918970223,"results":"24","hashOfConfig":"21"},{"size":2777,"mtime":1629918970223,"results":"25","hashOfConfig":"21"},{"size":8541,"mtime":1629918970223,"results":"26","hashOfConfig":"21"},{"size":684,"mtime":1629918970223,"results":"27","hashOfConfig":"21"},{"size":310,"mtime":1629918970223,"results":"28","hashOfConfig":"21"},{"size":446,"mtime":1629918970223,"results":"29","hashOfConfig":"21"},{"size":419,"mtime":1629918970223,"results":"30","hashOfConfig":"21"},{"size":1444,"mtime":1629918970223,"results":"31","hashOfConfig":"21"},{"size":2076,"mtime":1629918970223,"results":"32","hashOfConfig":"21"},{"size":619,"mtime":1629918970219,"results":"33","hashOfConfig":"21"},{"size":3468,"mtime":1629918970219,"results":"34","hashOfConfig":"21"},{"size":7950,"mtime":1629918970223,"results":"35","hashOfConfig":"21"},{"size":6647,"mtime":1629918970223,"results":"36","hashOfConfig":"21"},{"size":235,"mtime":1629918970223,"results":"37","hashOfConfig":"21"},{"size":183,"mtime":1629918970223,"results":"38","hashOfConfig":"21"},{"size":338,"mtime":1629918970223,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jfw97z",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/client/src/index.js",[],"/var/www/client/src/App.js",[],"/var/www/client/src/reportWebVitals.js",[],"/var/www/client/src/Stores/storeConfig.js",[],"/var/www/client/src/Screens/Index.jsx",[],"/var/www/client/src/Screens/Home.jsx",[],"/var/www/client/src/Stores/Reducers/CartInRestaurant.js",[],"/var/www/client/src/Stores/Reducers/Data.js",[],"/var/www/client/src/Stores/Reducers/Actions.js",[],"/var/www/client/src/Services/Restaurant.js",[],"/var/www/client/src/Components/Navbar.jsx",["83","84","85","86","87"],"import React, { useRef, useState, useEffect } from \"react\";\nimport logo from \"../Images/icon.png\";\nimport { Link } from \"react-router-dom\";\n\nexport default ({ searchValue }) => {\n  const [isActive, setisActive] = useState(false)\n  return (\n    <>\n      <nav\n        class=\"navbar\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n        style={{ backgroundColor: \"#ececf2\"}}\n      >\n        <div class=\"navbar-brand\">\n          <Link class=\"navbar-item\" to=\"/\" id=\"logo\">\n            \n          </Link>\n\n          <a\n            role=\"button\"\n            class=\"navbar-burger\"\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            onClick={() => {\n              setisActive(!isActive);\n            }}\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n\n        <div\n          id=\"navbarBasicExample\"\n          className={`navbar-menu ${isActive ? \"is-active\" : \"\"}`}\n        >\n          <div class=\"navbar-start\">\n            <Link class=\"navbar-item\" to=\"/\">\n              Téléchargez l'application\n            </Link>\n\n            <Link class=\"navbar-item\" to=\"/\">\n              Nous contactez\n            </Link>\n\n            <Link class=\"navbar-item\" to=\"/caps\">\n              À props de nous\n            </Link>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n};\n","/var/www/client/src/Components/MenuList.jsx",["88"],"import React from \"react\";\n\nclass MenusList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedItem: this.props.selectedItem,\n    };\n  }\n\n  _onClick = (index) => {\n    this.setState({ selectedItem: index }, () => {\n      return this.props.onChange(index);\n    });\n  };\n\n  _displayMenus = (item, index) => {\n    let arr = [];\n    for (let index in this.props.menus) {\n      const item = this.props.menus[index];\n      if (index == this.state.selectedItem) {\n        arr.push(\n          <div\n            style={Styles.containerSelected}\n            onClick={() => this._onClick(index)}\n          >\n            <h2 style={Styles.textSelected}>{item.name}</h2>\n          </div>\n        );\n      } else {\n        arr.push(\n          <div style={Styles.container} onClick={() => this._onClick(index)}>\n            <h2 style={Styles.textNotSelected}>{item.name}</h2>\n          </div>\n        );\n      }\n    }\n    return arr;\n  };\n\n  render() {\n    const menus = this.props.menus;\n    return (\n      <div style={{...Styles.bigContainer, ...this.props.style}}>\n        {menus.length > 0 ? (\n          this._displayMenus()\n        ) : (\n          <em style={Styles.em}>Aucun menus</em>\n        )}\n      </div>\n    );\n  }\n}\n\nconst Styles = {\n  container: {\n    backgroundColor: \"silver\",\n    padding: 12.5,\n    marginLeft: 15,\n    borderRadius: 12.5,\n    display: \"flex\",\n    flexDirection: \"row\",\n    whiteSpace: \"nowrap\",\n    cursor: \"pointer\",\n  },\n  containerSelected: {\n    backgroundColor: \"tomato\",\n    padding: 12.5,\n    marginLeft: 15,\n    borderRadius: 12.5,\n    whiteSpace: \"nowrap\",\n    cursor: \"pointer\",\n  },\n  bigContainer: {\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 5,\n    display: \"flex\",\n    overflowX: \"scroll\",\n    zIndex: 1000,\n    fontSize: \"70%\",\n  },\n  textSelected: {\n    color: \"white\",\n    fontWeight: \"600\",\n  },\n  textNotSelected: {\n    color: \"black\",\n  },\n  em: {\n    fontStyle: \"italic\",\n    textAlign: \"center\",\n  },\n};\n\nexport default MenusList;\n","/var/www/client/src/Components/Dish.jsx",[],"/var/www/client/src/Components/DishForCart.jsx",["89"],"import \"./Dish.css\";\nimport { connect } from \"react-redux\";\nimport {\n  DELETE_ITEM_RESTAURANT_ACTION_IN_RESTAURANT,\n  UPDATE_ITEM_ACTION_IN_RESTAURANT,\n} from \"../Stores/Reducers/Actions\";\nimport { useState } from \"react\";\n\nconst DishForCart = ({ dish, index, dispatch, cart }) => {\n  let nbre = 0;\n\n\n  const _getPrice = () => {\n    if (dish.optionInfo) {\n      return dish.optionInfo.price;\n    } else {\n      return dish.info.price;\n    }\n  };\n\n  const _getOption = () => {\n    if (dish.optionInfo) {\n      return <h4 className=\"card-subtitle\">Option: {dish.optionInfo.name}</h4>;\n    }\n  };\n\n  const _onPlusPress = () => {\n    let newState = cart;\n    newState[index] = {\n      ...newState[index],\n      quantity: newState[index].quantity + 1,\n    };\n    dispatch({\n      type: UPDATE_ITEM_ACTION_IN_RESTAURANT,\n      payload: newState,\n    });\n  };\n\n  const _onMinusPress = () => {\n    if (cart[index].quantity > 1) {\n      let newState = cart;\n      newState[index] = {\n        ...newState[index],\n        quantity: newState[index].quantity - 1,\n      };\n      dispatch({\n        type: UPDATE_ITEM_ACTION_IN_RESTAURANT,\n        payload: newState,\n      });\n    } else {\n      nbre ++;\n      if (nbre >= 2) {\n        if (window.confirm('Voulez-vous supprimer cette élément du panier ?')) {\n          _onDeletePress();\n        }\n      }\n    }\n  };\n\n  const _onDeletePress = () => {\n    dispatch({\n      type: DELETE_ITEM_RESTAURANT_ACTION_IN_RESTAURANT,\n      index: parseInt(index),\n    });\n  }\n\n  return (\n    <div className=\"card-container\">\n      <div\n        style={{\n          width: \"40%\",\n          background: `url(\"${dish.info.imageUrl}\") no-repeat center center`,\n          backgroundSize: \"contain\",\n        }}\n      ></div>\n      <div className=\"card-content\">\n        <h3 className=\"card-title\">{dish.info.name}</h3>\n        <h4 className=\"card-subtitle\">Quantité: {dish.quantity}</h4>\n        {_getOption()}\n        <h4 className=\"card-subtitle\">Prix: {_getPrice()}$</h4>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <button className=\"button is-rounded is-small is-warning\" onClick={_onMinusPress}>\n            <span className=\"icon is-small\">\n              <span\n                className=\"iconify\"\n                style={{ fontSize: 50 }}\n                data-icon=\"akar-icons:minus\"\n                onClick={_onMinusPress}\n              ></span>\n            </span>\n          </button>\n          <button className=\"button is-rounded is-small is-danger\" onClick={_onDeletePress}>\n            <span className=\"icon is-small\">\n              <span\n                className=\"iconify\"\n                style={{ fontSize: 50 }}\n                data-icon=\"bytesize:trash\"\n                onClick={_onDeletePress}\n              ></span>\n            </span>\n          </button>\n          <button\n            className=\"button is-rounded is-small is-link\"\n            onClick={_onPlusPress}\n          >\n            <span className=\"icon is-small\">\n              <span\n                className=\"iconify\"\n                style={{ fontSize: 50 }}\n                data-icon=\"akar-icons:plus\"\n                onClick={_onPlusPress}\n              ></span>\n            </span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect((state) => ({\n  cart: state.cartInRestaurant,\n}))(DishForCart);\n","/var/www/client/src/Components/ModalDish.jsx",["90","91","92"],"import React from \"react\";\nimport { getOneDish } from \"../Services/Dish\";\nimport {\n  ADD_ITEM_ACTION_IN_RESTAURANT,\n  UPDATE_ITEM_ACTION_IN_RESTAURANT,\n} from \"../Stores/Reducers/Actions\";\nimport { connect } from \"react-redux\";\n\nclass ModalDish extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      error: false,\n      data: null,\n      quantity: 1,\n      option: \"Scum\",\n      optionId: null,\n    };\n  }\n\n  componentDidMount() {\n    getOneDish(this.props.id)\n      .then((data) => {\n        if (data.find) {\n          console.log(\"====================================\");\n          console.log(data.result);\n          console.log(\"====================================\");\n          this.setState({ isLoading: false, error: false, data: data.result });\n        } else {\n          this.setState({ isLoading: false, error: true });\n        }\n      })\n      .catch(() => {\n        this.setState({ isLoading: false, error: true });\n      });\n  }\n\n  _onMinusPress = (event) => {\n    event.preventDefault();\n    if (this.state.quantity > 1) {\n      this.setState({ quantity: this.state.quantity - 1 });\n    }\n  };\n\n  _onPlusPress = (event) => {\n    event.preventDefault();\n    this.setState({ quantity: this.state.quantity + 1 });\n  };\n\n  _displayOptions = () => {\n    let arr = [];\n    for (let index in this.state.data.options) {\n      arr.push(\n        <option value={index}>\n          {this.state.data.options[index].name} (\n          {this.state.data.options[index].price} $)\n        </option>\n      );\n    }\n    return arr;\n  };\n\n  _handleOption = (event) => {\n    this.setState({ option: event.target.value }, () => {\n      event.target.value !== \"Scum\"\n        ? this.setState({\n            optionId: this.state.data.options[event.target.value].idDishOption,\n          })\n        : this.setState({ optionId: null });\n    });\n  };\n\n  _getContent = () => {\n    if (this.state.isLoading) {\n      return (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            textAlign: \"center\",\n          }}\n        >\n          <div className=\"container\">\n            <progress class=\"progress is-small is-danger\" max=\"100\">\n              15%\n            </progress>\n          </div>\n        </div>\n      );\n    } else if (this.state.error) {\n      return <em>Une erreur a eu lieu, réessayez ou contactez-nous</em>;\n    } else {\n      return (\n        <div style={{ textAlign: \"left\" }}>\n          <div className=\"center\">\n            <img src={this.state.data.imageUrl} style={{ width: \"40%\" }} />\n            <br />\n            <span className=\"title is-3\">{this.state.data.name}</span>\n          </div>\n          <span className=\"title is-5\">\n            Calories: {this.state.data.calories} kcal\n          </span>\n          <br />\n          <em>{this.state.data.description}</em>\n          {this.state.data.options.length > 0 && this.state.data.options ? (\n            <>\n              <br />\n              <br />\n              <div className=\"select is-danger\" style={{ width: \"100%\" }}>\n                <select style={{ width: \"100%\" }} onChange={this._handleOption}>\n                  <option value=\"Scum\">Choissisez une option...</option>\n                  {this._displayOptions()}\n                </select>\n              </div>\n            </>\n          ) : null}\n          <br />\n          <br />\n          <div className=\"center\">\n            <span className=\"title is-3\">\n              Prix:{\" \"}\n              {this.state.option !== \"Scum\"\n                ? this.state.data.options[this.state.option].price\n                : this.state.data.price}\n              $\n            </span>\n          </div>\n          <br />\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <button\n              className=\"button is-rounded is-medium\"\n              onClick={this._onMinusPress}\n            >\n              <span className=\"icon is-medium\">\n                <span\n                  className=\"iconify\"\n                  style={{ fontSize: 50 }}\n                  data-icon=\"akar-icons:minus\"\n                  onClick={this._onMinusPress}\n                ></span>\n              </span>\n            </button>\n            <span style={{ fontSize: 40 }}>{this.state.quantity}</span>\n            <button\n              className=\"button is-rounded is-medium\"\n              onClick={this._onPlusPress}\n            >\n              <span className=\"icon is-medium\">\n                <span\n                  className=\"iconify\"\n                  style={{ fontSize: 50 }}\n                  data-icon=\"akar-icons:plus\"\n                  onClick={this._onPlusPress}\n                ></span>\n              </span>\n            </button>\n          </div>\n          <button\n            className=\"button is-fullwidth\"\n            style={{ backgroundColor: \"#28a745\", color: \"white\" }}\n            onClick={this._addInCart}\n          >\n            Ajouter au panier\n          </button>\n          <div className=\"center\">\n            <span className=\"title is-3\">\n              Total:{\" \"}\n              {this.state.option !== \"Scum\"\n                ? this.state.data.options[this.state.option].price *\n                  this.state.quantity\n                : this.state.data.price * this.state.quantity}\n              $\n            </span>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  _addInCart = (event) => {\n    event.preventDefault();\n\n    let addNew = true;\n    let capture = null;\n    for (let index in this.props.cart) {\n      if (\n        this.props.cart[index].idDish == this.props.id &&\n        this.props.cart[index].idOption == this.state.optionId\n      ) {\n        addNew = false;\n        capture = index;\n      }\n    }\n\n    if (addNew) {\n      this.props.dispatch({\n        type: ADD_ITEM_ACTION_IN_RESTAURANT,\n        payload: {\n          idDish: this.props.id,\n          quantity: this.state.quantity,\n          idOption: this.state.optionId,\n          info: this.state.data,\n          optionInfo: this.state.data.options[this.state.option],\n        },\n      });\n    } else {\n      let newState = this.props.cart;\n      newState[capture] = {\n        ...newState[capture],\n        info: this.state.data,\n        quantity: this.state.quantity + newState[capture].quantity,\n        optionInfo: this.state.data.options[this.state.option],\n      };\n      this.props.dispatch({\n        type: UPDATE_ITEM_ACTION_IN_RESTAURANT,\n        payload: newState,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div class=\"modal is-active is-clipped\">\n        <div className=\"modal-background\"></div>\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <p className=\"modal-card-title\">\n              {this.state.data === null ? \"\" : this.state.data.name}\n            </p>\n            <button\n              className=\"delete\"\n              aria-label=\"close\"\n              onClick={() => this.props.close()}\n            ></button>\n          </header>\n          <section className=\"modal-card-body\">{this._getContent()}</section>\n          <footer\n            className=\"modal-card-foot\"\n            style={{ justifyContent: \"right\" }}\n          >\n            <button\n              className=\"button\"\n              style={{ backgroundColor: \"#28a745\", color: \"white\" }}\n              onClick={this._addInCart}\n            >\n              Ajouter au panier\n            </button>\n            <button\n              className=\"button is-danger\"\n              onClick={() => this.props.close()}\n            >\n              Fermer\n            </button>\n          </footer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => ({\n  cart: state.cartInRestaurant,\n}))(ModalDish);\n","/var/www/client/src/Components/ModalCommand.jsx",["93","94","95"],"import React from \"react\";\nimport { getOneDish } from \"../Services/Dish\";\nimport {\n  ADD_ITEM_ACTION_IN_RESTAURANT,\n  UPDATE_ITEM_ACTION_IN_RESTAURANT,\n} from \"../Stores/Reducers/Actions\";\nimport { connect } from \"react-redux\";\nimport { getOneTable } from \"../Services/Restaurant\";\nimport { placeOrderInRestaurant } from \"../Services/Command\";\n\nclass ModalCommand extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      error: false,\n      tableInfo: null,\n      name: \"\",\n      comment: \"\",\n      error2: false,\n      success: false,\n    };\n  }\n\n  _getTotal = () => {\n    let total = 0;\n    for (let index in this.props.cart) {\n      if (\n        this.props.cart[index].optionInfo &&\n        this.props.cart[index].idOption\n      ) {\n        total +=\n          this.props.cart[index].quantity *\n          this.props.cart[index].optionInfo.price;\n      } else {\n        total +=\n          this.props.cart[index].quantity * this.props.cart[index].info.price;\n      }\n    }\n    return total;\n  };\n\n  componentDidMount() {\n    getOneTable(this.props.data.tableId, this.props.data.restoInfo.idRestaurant)\n      .then((data) => {\n        if (data.find) {\n          this.setState({\n            error: false,\n            isLoading: false,\n            tableInfo: data.result,\n          });\n        } else {\n          this.setState({ error: true, isLoading: false });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({ error: true, isLoading: false });\n      });\n  }\n\n  _handleName = (event) => {\n    this.setState({ name: event.target.value });\n  }\n\n  _handleComment = (event) => {\n    this.setState({ comment: event.target.value });\n  }\n\n  _onSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ isLoading: true }, () => {\n      const toSend = {\n        idTable: this.props.data.tableId,\n        deviceId: \"ID\",\n        name: this.state.name,\n        comment: this.state.comment,\n        paymentMethod: \"cash\",\n        dishes: this.props.cart,\n      };\n      placeOrderInRestaurant(toSend, this.props.data.restoInfo.idRestaurant)\n        .then(res => res.json())\n        .then((data) => {\n          if (data.create) {\n            this.idCommand = data.insertId;\n            this.setState({ success: true, error2: false, isLoading: false, });\n          } else if (data.invalidForm) {\n            this.setState({ error2: false, isLoading: false, });\n          } else {\n            this.setState({ error2: true, isLoading: false, });\n          }\n        })\n        .catch((error) => {\n          this.setState({ error2: true, isLoading: false, });\n        });\n    });\n  }\n\n  _getContent = () => {\n    if (this.state.isLoading) {\n      return (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            textAlign: \"center\",\n          }}\n        >\n          <div className=\"container\">\n            <progress class=\"progress is-small is-danger\" max=\"100\">\n              15%\n            </progress>\n          </div>\n        </div>\n      );\n    } else if (this.state.error) {\n      return <em>Une erreur a eu lieu, réessayez ou contactez-nous</em>;\n    } else if (this.state.success) {\n      window.onbeforeunload =  null;\n      return (\n        <div className=\"center\">\n          <span style={{ fontSize: \"700%\", color: \"#28a745\" }} className=\"iconify\" data-icon=\"akar-icons:circle-check\"></span>\n          <br />\n          <span style={{ fontSize: \"150%\", }}>Commande passée avec succès</span>\n          <br />\n          <a href=\"https://techeatfast.com\" className=\"button is-success is-fullwidth\">D'accord</a>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <div\n            style={{\n              fontSize: \"150%\",\n              fontWeight: \"bold\",\n              textAlign: \"center\",\n            }}\n          >\n            Total: {this._getTotal()}$\n          </div>\n          <div\n            style={{\n              fontSize: \"150%\",\n              fontWeight: \"bold\",\n              textAlign: \"center\",\n            }}\n          >\n            Table: {this.state.tableInfo.tableId}\n          </div>\n          <div class=\"field\">\n            <label class=\"label\">Nom (optionnel): </label>\n            <div class=\"control\">\n              <input\n                class=\"input\"\n                type=\"text\"\n                placeholder=\"Votre nom...\"\n                value={this.state.name}\n                onChange={this._handleName}\n              />\n            </div>\n          </div>\n          <div class=\"field\">\n            <label class=\"label\">Commentaire (optionnel): </label>\n            <div class=\"control\">\n              <input\n                class=\"input\"\n                type=\"text\"\n                placeholder=\"Une petite note...\"\n                value={this.state.comment}\n                onChange={this._handleComment}\n              />\n            </div>\n          </div>\n          {this.state.error2 ? <div className='notification is-danger'>Une erreur a eu lieu, réesayez ou parlez-en au restaurant</div> : null}\n          <div style={{ textAlign: \"center\" }}>\n            <button\n              className=\"button\"\n              style={{\n                backgroundColor: \"#28a745\",\n                color: \"white\",\n                marginRight: 8,\n                marginLeft: 8,\n                width: \"80%\",\n              }}\n              onClick={this._onSubmit}\n            >\n              Passer la commande\n            </button>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div class=\"modal is-active is-clipped\">\n        <div className=\"modal-background\"></div>\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <p className=\"modal-card-title\">Passer la commande</p>\n            <button\n              className=\"delete\"\n              aria-label=\"close\"\n              onClick={() => this.props.close()}\n            ></button>\n          </header>\n          <section className=\"modal-card-body\">{this._getContent()}</section>\n          <footer\n            className=\"modal-card-foot\"\n            style={{ justifyContent: \"right\" }}\n          >\n            <button\n              className=\"button is-danger\"\n              onClick={() => this.props.close()}\n            >\n              Fermer\n            </button>\n          </footer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => ({\n  cart: state.cartInRestaurant,\n  data: state.data,\n}))(ModalCommand);\n","/var/www/client/src/Services/Url.js",[],"/var/www/client/src/Services/Dish.js",[],"/var/www/client/src/Services/Command.js",[],{"ruleId":"96","severity":1,"message":"97","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":23},{"ruleId":"96","severity":1,"message":"100","line":1,"column":35,"nodeType":"98","messageId":"99","endLine":1,"endColumn":44},{"ruleId":"96","severity":1,"message":"101","line":2,"column":8,"nodeType":"98","messageId":"99","endLine":2,"endColumn":12},{"ruleId":"102","severity":1,"message":"103","line":5,"column":1,"nodeType":"104","endLine":56,"endColumn":3},{"ruleId":"105","severity":1,"message":"106","line":20,"column":11,"nodeType":"107","endLine":28,"endColumn":12},{"ruleId":"108","severity":1,"message":"109","line":21,"column":17,"nodeType":"110","messageId":"111","endLine":21,"endColumn":19},{"ruleId":"96","severity":1,"message":"112","line":7,"column":10,"nodeType":"98","messageId":"99","endLine":7,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":99,"column":13,"nodeType":"107","endLine":99,"endColumn":76},{"ruleId":"108","severity":1,"message":"109","line":196,"column":39,"nodeType":"110","messageId":"111","endLine":196,"endColumn":41},{"ruleId":"108","severity":1,"message":"109","line":197,"column":41,"nodeType":"110","messageId":"111","endLine":197,"endColumn":43},{"ruleId":"96","severity":1,"message":"115","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":20},{"ruleId":"96","severity":1,"message":"116","line":4,"column":3,"nodeType":"98","messageId":"99","endLine":4,"endColumn":32},{"ruleId":"96","severity":1,"message":"117","line":5,"column":3,"nodeType":"98","messageId":"99","endLine":5,"endColumn":35},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'logo' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'getOneDish' is defined but never used.","'ADD_ITEM_ACTION_IN_RESTAURANT' is defined but never used.","'UPDATE_ITEM_ACTION_IN_RESTAURANT' is defined but never used."]